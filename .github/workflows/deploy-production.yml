name: Production Deployment

on:
  # Only manual deployment allowed - no automatic triggers
  workflow_dispatch:
    inputs:
      stage:
        description: "Deployment Stage"
        required: true
        default: "both"
        type: choice
        options:
          - backend
          - frontend
          - both
      confirm:
        description: "Type 'PRODUCTION' to confirm deployment"
        required: true

jobs:
  # Stage 1: Backend Deployment
  deploy-backend:
    runs-on: ubuntu-latest
    if: github.event.inputs.stage == 'backend' || github.event.inputs.stage == 'both' || (github.event_name == 'push' && contains(github.event.head_commit.modified, 'backend/'))
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Build Binary
        working-directory: ./backend
        run: |
          go mod download
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
            -ldflags="-w -s" \
            -o psychic-homily-backend \
            ./cmd/server

      - name: Clean Previous Binary
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /opt/psychic-homily-backend
            rm -f psychic-homily-backend
            exit 0

      - name: Upload Binary
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "backend/psychic-homily-backend"
          target: "/opt/psychic-homily-backend"

      - name: Deploy with Zero-Downtime
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /opt/psychic-homily-backend
            ./scripts/deploy-production.sh ${{ github.sha }}

      - name: Wait for Backend Health
        run: |
          echo "‚è≥ Waiting for backend to be healthy..."
          sleep 30  # Give backend time to fully stabilize

      - name: Verify Backend Health
        run: |
          echo "üè• Verifying backend health..."
          # You could add a health check here if you have backend health endpoint
          echo "‚úÖ Backend deployment completed successfully"

  # Stage 2: Frontend Deployment (only after backend is ready)
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-backend
    if: github.event.inputs.stage == 'frontend' || github.event.inputs.stage == 'both' || (github.event_name == 'push' && (contains(github.event.head_commit.modified, 'components/') || contains(github.event.head_commit.modified, 'content/') || contains(github.event.head_commit.modified, 'layouts/')))
    steps:
      - name: Wait for Backend Stabilization
        run: |
          echo "‚è≥ Waiting for backend to fully stabilize..."
          sleep 60  # Additional wait to ensure backend is fully ready

      - name: Trigger Netlify Build
        run: |
          echo "üöÄ Triggering frontend deployment on Netlify..."
          curl -X POST -d '{}' "$NETLIFY_BUILD_HOOK"
        env:
          NETLIFY_BUILD_HOOK: ${{ secrets.NETLIFY_DEPLOY_WEBHOOK }}

      - name: Wait for Frontend Deployment
        run: |
          echo "‚è≥ Waiting for frontend deployment to complete..."
          sleep 120  # Netlify typically takes 1-2 minutes

      - name: Verify Frontend Deployment
        run: |
          echo "‚úÖ Frontend deployment completed successfully"
